

To run our project 2 with GUI:

1. initial the table in the databse and compline two shell script to configure the program:

make all

2. update the path variable in path.m (located in ./GUI/AAA/path.m)

for example:
you need to find path.m in ./GUI/AAA/path.m, right click the files get the absolute file path of it. And then you open path.m, modeified three path variable, NSString * path, NSString * A, NSStirng * B with the full path you got before, and save the files;

3. use xcode to compline and run the GUI interface, if you still have problem to use, you may close the app sandbox.








To run the jdbc program only without GUI:

1. scp myjdbc.java into bingsuns, compline it with "javac myjdbc.java".

2. go into SQL database, initial the table as:

start Proj2data;
start trigger;
start package;
start sequence;

3. go back to bingsuns.

(1) To show the table, type "java myjdbc <fun_id> <table_id>"
for example: 
to show logs:           "java myjdbc 1 0"
to show supplies:       "java myjdbc 1 1"
to show suppliers:      "java myjdbc 1 2"
to show discounts:      "java myjdbc 1 3"
to show purchases:      "java myjdbc 1 4"
to show products:		"java myjdbc 1 5"
to show employees:		"java myjdbc 1 6"
to show customers:		"java myjdbc 1 7"

(2) To calculate the purchase_saving(pur#), type "java myjdbc <fun_id> <pur#>"
for example:
"java myjdbc 2 100001"

(3) To get the monthly_sale_activities(eid), type "java myjdbc <fun_id> <eid>"
for example:
"java myjdbc 3 e01"

(4)To add customer, type "java myjdbc <fun_id> <cid> <name> <telephone#>"
for example:
"java myjdbc 4 c009 ming 203-745-7295"

(5)To add purchase, type "java myjdbc <fun_id> <eid> <pid> <cid> <pur_qty>"
for example:
"java myjdbc 5 e01 p001 c001 3"

(6)To delete purchase, type "java myjdbc <fun_id> <pur#>"
for example:
"java myjdbc 6 100001"



To run PL/SQL only:
You should wirte your own sql test code to test the program.

